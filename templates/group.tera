{% extends "base" %}

{% block title %}
Group: {{ description }}
{% endblock title %}

{% block main %}

{% if rows | length > 0 %}
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Comment</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        {% for row in rows %}
        <tr id="row{{row.membership_path}}">
            <td>{{row.person}}</td>
            <td>{{row.comment}}</td>
            <td><button class="btn btn-danger btn-sm" data-url="{{row.membership_path}}" onclick="deleteRow(this)">Delete</button></td>
        </tr>
        {% endfor %}
    </tbody>
</table>
{% endif %}

<div class="container">
    <div class="row">
        <div class="col">
            <select id="new_persons" name="new_persons" class="form-control" >
            {% for person in persons["persons"] %}
                <option value="{{person.0 | safe}}">{{person.1}}</option>
            {% endfor %}
            </select>
        </div>
        <div class="col">
            <button id="add_new_persons" class="btn btn-primary">Add person to group</button>
        </div>
    </div>
</div>
{% endblock main %}

{% block body_end %}
<div class="modal" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="infoModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="infoModalLabel" />
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="infoModalBody">
        <!-- Error message will be displayed here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
function showInfoModal(title, message) {
    var modalTitle = document.getElementById('infoModalLabel');
    modalTitle.textContent = title;

    var modalBody = document.getElementById('infoModalBody');
    modalBody.textContent = message;

    new bootstrap.Modal("#infoModal").show();
}

function deleteRow(element) {
    // Retrieve the URL from the data-url attribute, transform it to the membership ID, and the row id.
    var fullUrl = element.getAttribute('data-url');
    var url = "{{ primary_key }}/".concat(fullUrl.split('/').pop());

    var xhr = new XMLHttpRequest(); // Create a new XMLHttpRequest
    xhr.open("DELETE", url, true); // Initialize the request

    xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
            var row = element.closest('tr');
            if (row) {
                row.parentNode.removeChild(row);
            }
        } else {
            showInfoModal("Error", xhr.statusText);
        }
    };

    xhr.onerror = function() {
        showInfoModal("Error", "The request failed");
    };

    xhr.send(); // Send the request
}

document.addEventListener("DOMContentLoaded", function() {
    // Get the button element
    var addButton = document.getElementById("add_new_persons");
    addButton.addEventListener("click", function() {
        // Get the selected value from the dropdown
        var selectedPerson = document.getElementById("new_persons").value;

        // Create a new XMLHttpRequest object
        var xhr = new XMLHttpRequest();

        // Configure the request
        var url = "{{ primary_key }}/".concat(selectedPerson.split('/').pop());
        xhr.open("POST", url);
        xhr.setRequestHeader("Content-Type", "application/json");

        // Define the data to be sent
        var data = JSON.stringify({ person: selectedPerson });

        // Set up the onload function to handle the response
        xhr.onload = function() {
            if (xhr.status === 201) {
                // Update page for showing the newly added member
                location.reload();
            } else {
                showInfoModal("Error", xhr.statusText);
            }
        };

        // Set up the onerror function to handle any errors
        xhr.onerror = function() {
            showInfoModal("Error", xhr.statusText)
        };

        // Send the request
        xhr.send(data);
    });
});
</script>

{% endblock body_end %}