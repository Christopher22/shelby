{% extends "base" %}

{% block title %}
Shelby: {{ title }}
{% endblock title %}

{% block navbar_extra %}
<a class="btn btn-primary mx-2" href="{{url_add}}">Add Record</a>
{% endblock navbar_extra %}

{% block main %}
<table class="table table-striped">
    <thead>
        <tr>
            {% for header in headers %}
            <th scope="col">
            {% if header.1 | length > 1 %}
            <a class="sort-button" sort_by="{{header.1}}">{{header.0}}</a>
            {% else %}
            {{header.0}}
            {% endif %}
            </th>
            {% endfor %}
        </tr>
    </thead>
    <tbody>
        {% for row in rows %}
        <tr>
            {% for value in row %}
            <td>{{value | safe}}</td>
            {% endfor %}
        </tr>
        {% endfor %}
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        {% if previous_url %}
        <li class="page-item">
            <a class="page-link" href="{{previous_url}}">Previous</a>
        </li>
        {% else %}
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
        </li>
        {% endif %}

        {% if next_url %}
        <li class="page-item">
            <a class="page-link" href="{{next_url}}">Next</a>
        </li>
        {% else %}
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Next</a>
        </li>
        {% endif %}
    </ul>
</nav>
{% endblock main %}

{% block body_end %}
<script>
    document.querySelectorAll('.sort-button').forEach(button => {
        button.addEventListener('click', function() {
            const sortBy = this.getAttribute('sort_by');
            const currentUrl = new URL(window.location);
            const currentSort = currentUrl.searchParams.get('sort_by');
            const currentOrder = currentUrl.searchParams.get('order') || 'desc';

            if (currentSort === sortBy && currentOrder === 'asc') {
                currentUrl.searchParams.set('order', 'desc');
            } else {
                currentUrl.searchParams.set('order', 'asc');
            }
            
            currentUrl.searchParams.set('sort_by', sortBy);
            window.location = currentUrl.href;
        });
    });

    // Function to update the button display based on the current sort settings
    function updateButtonStyles() {
        const currentUrl = new URL(window.location);
        const sortedBy = currentUrl.searchParams.get('sort_by');
        const sortOrder = currentUrl.searchParams.get('order') || 'asc';

        document.querySelectorAll('.sort-button').forEach(button => {
            const sortBy = button.getAttribute('sort_by');
            if (sortBy === sortedBy) {
                button.textContent = button.textContent.concat(sortOrder === 'asc' ? ' △' : ' ▽')
                button.classList.add('active');
            } else {
                button.classList.remove('active');
            }
        });
    }

    updateButtonStyles();
</script>
{% endblock body_end %}